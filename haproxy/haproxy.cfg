# brew install haproxy
# sudo haproxy -f haproxy.cfg
global
  log stdout format raw local0
  maxconn     1000
  nbproc      1
  tune.ssl.default-dh-param 2048
  # ssl-default-bind-options no-sslv3 no-tls-tickets force-tlsv12
  ssl-default-bind-options no-tls-tickets force-tlsv12
  ssl-default-bind-ciphers AES128+EECDH:AES128+EDH

defaults
  mode                    http
  log                     global
  option                  httplog
  #option                  dontlognull
  #option forwardfor       except 127.0.0.0/8
  #option                  redispatch
  #option http-server-close

  timeout http-keep-alive 5s
  timeout http-request    5s
  timeout queue           1m
  timeout connect         5s
  timeout client          15s
  timeout tunnel          30m
  timeout server          1m
  timeout check           5s
  retries                 3


cache mycache
  total-max-size 4095   # MB
  max-object-size 1048576 # bytes
  max-age 30            # seconds

### frontends
frontend http_proxy
  # bind 127.0.0.1:443 ssl crt haproxy.pem ciphers AES128+EECDH:AES128+EDH force-tlsv12 no-sslv3
  bind 127.0.0.1:443 ssl crt haproxy.pem ciphers AES128+EECDH:AES128+EDH force-tlsv12
  bind 127.0.0.1:80

  option forwardfor
  rspadd X-Proxy-Host:\ localhost

  acl is_ssl dst_port 443
  reqadd X-Forwarded-Proto:\ http
  reqadd X-Forwarded-Proto:\ https if is_ssl

  http-response set-header X-Cache-Status HIT  if !{ srv_id -m found }
  http-response set-header X-Cache-Status MISS if  { srv_id -m found }

  acl graph_path path_beg -i /graphql
  use_backend yonderbox-graphql-demo if graph_path

  acl graph_path path_beg -i /graphiql
  use_backend yonderbox-graphql-demo if graph_path


  # default_backend baas
  default_backend yonderbox-meteor

### backends
backend yonderbox-meteor
  compression algo gzip
  compression type text/html text/plain text/css text/javascript application/javascript

  # http-request cache-use mycache
  # http-response cache-store mycache

  #   option  httpchk GET /monitor
  server local 127.0.0.1:3000
  # server local 127.0.0.1:3000 check





backend yonderbox-graphql-demo
  # Get from cache / put in cache
  http-request cache-use mycache if !{ path_beg /monitor }
  # http-request cache-use mycache
  http-response cache-store mycache

  # option  httpchk GET /monitor/
  # server local 127.0.0.1:3100 check

  server local 127.0.0.1:3100

